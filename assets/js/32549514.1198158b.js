"use strict";(self.webpackChunkneural_log_docs=self.webpackChunkneural_log_docs||[]).push([[22],{8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},9658:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"development/csharp-sdk-development","title":"C# SDK Development","description":"SDK Development","source":"@site/docs/development/csharp-sdk-development.md","sourceDirName":"development","slug":"/development/csharp-sdk-development","permalink":"/docs/docs/development/csharp-sdk-development","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralLog/docs/tree/main/docs/development/csharp-sdk-development.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Java 22 Compatibility","permalink":"/docs/docs/development/java-22-compatibility"},"next":{"title":"Python SDK Development","permalink":"/docs/docs/development/python-sdk-development"}}');var t=i(4848),r=i(8453);const l={},o="C# SDK Development",a={},d=[{value:"Development Environment",id:"development-environment",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Getting Started",id:"getting-started",level:3},{value:"Project Structure",id:"project-structure",level:2},{value:"NuGet Packaging",id:"nuget-packaging",level:2},{value:"Publishing Process",id:"publishing-process",level:3},{value:"Setting Up NuGet API Key",id:"setting-up-nuget-api-key",level:3},{value:"Manual Publishing",id:"manual-publishing",level:3},{value:"Versioning",id:"versioning",level:2},{value:"Framework Adapters",id:"framework-adapters",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Continuous Integration",id:"continuous-integration",level:2},{value:"Contributing",id:"contributing",level:2},{value:"License",id:"license",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"c-sdk-development",children:"C# SDK Development"})}),"\n",(0,t.jsx)(n.p,{children:"This guide provides information for developers working on the NeuralLog C# SDK."}),"\n",(0,t.jsx)(n.h2,{id:"development-environment",children:"Development Environment"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:".NET 9.0 SDK or later"}),"\n",(0,t.jsx)(n.li,{children:"Visual Studio 2022 or later, Visual Studio Code, or JetBrains Rider"}),"\n",(0,t.jsx)(n.li,{children:"Git"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Clone the repository:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/NeuralLog/csharp-sdk.git\ncd csharp-sdk\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Build the solution:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dotnet build\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Run the tests:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dotnet test\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"src/NeuralLog.SDK"}),": The main SDK project","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Models"}),": Data models used by the SDK"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Http"}),": HTTP client implementation"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tests/NeuralLog.SDK.Tests"}),": Unit tests for the SDK"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"nuget-packaging",children:"NuGet Packaging"}),"\n",(0,t.jsxs)(n.p,{children:["The C# SDK is set up for automatic NuGet package publishing using GitHub Actions. The package configuration is defined in the ",(0,t.jsx)(n.code,{children:"NeuralLog.SDK.csproj"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<PropertyGroup>\n  <Version>1.0.0</Version>\n  <Authors>NeuralLog Team</Authors>\n  <Company>NeuralLog</Company>\n  <Description>C# SDK for NeuralLog - A logging system for AI applications</Description>\n  <PackageLicenseExpression>MIT</PackageLicenseExpression>\n  <PackageProjectUrl>https://github.com/NeuralLog/csharp-sdk</PackageProjectUrl>\n  <RepositoryUrl>https://github.com/NeuralLog/csharp-sdk</RepositoryUrl>\n  <RepositoryType>git</RepositoryType>\n  <PackageTags>logging;ai;sdk;neurallog</PackageTags>\n  <PackageReadmeFile>README.md</PackageReadmeFile>\n  <GenerateDocumentationFile>true</GenerateDocumentationFile>\n  <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\n</PropertyGroup>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"publishing-process",children:"Publishing Process"}),"\n",(0,t.jsxs)(n.p,{children:["The NuGet package is published automatically when a new release is created on GitHub. The publishing process is defined in the ",(0,t.jsx)(n.code,{children:".github/workflows/publish.yml"})," file:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A new release is created on GitHub"}),"\n",(0,t.jsx)(n.li,{children:"The GitHub Actions workflow is triggered"}),"\n",(0,t.jsx)(n.li,{children:"The workflow builds, tests, and packages the SDK"}),"\n",(0,t.jsx)(n.li,{children:"The package is published to the NuGet Gallery"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-nuget-api-key",children:"Setting Up NuGet API Key"}),"\n",(0,t.jsx)(n.p,{children:"To enable automatic NuGet package publishing, you need to add a NuGet API key as a secret in the GitHub repository settings:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Generate a NuGet API key from ",(0,t.jsx)(n.a,{href:"https://www.nuget.org/",children:"nuget.org"})]}),"\n",(0,t.jsxs)(n.li,{children:["Go to the GitHub repository settings at ",(0,t.jsx)(n.a,{href:"https://github.com/NeuralLog/csharp-sdk/settings/secrets/actions",children:"https://github.com/NeuralLog/csharp-sdk/settings/secrets/actions"})]}),"\n",(0,t.jsxs)(n.li,{children:["Add a new repository secret with the name ",(0,t.jsx)(n.code,{children:"NUGET_API_KEY"})]}),"\n",(0,t.jsx)(n.li,{children:"Paste your NuGet API key as the value"}),"\n",(0,t.jsx)(n.li,{children:'Click "Add secret"'}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"manual-publishing",children:"Manual Publishing"}),"\n",(0,t.jsx)(n.p,{children:"You can also publish the NuGet package manually:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Build the package:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dotnet pack src/NeuralLog.SDK/NeuralLog.SDK.csproj --configuration Release\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Publish the package:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dotnet nuget push src/NeuralLog.SDK/bin/Release/NeuralLog.SDK.1.0.0.nupkg --api-key YOUR_API_KEY --source https://api.nuget.org/v3/index.json\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"versioning",children:"Versioning"}),"\n",(0,t.jsxs)(n.p,{children:["The SDK follows ",(0,t.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Major version"}),": Incompatible API changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minor version"}),": Backwards-compatible functionality additions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Patch version"}),": Backwards-compatible bug fixes"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To update the version:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Update the ",(0,t.jsx)(n.code,{children:"Version"})," property in the ",(0,t.jsx)(n.code,{children:"NeuralLog.SDK.csproj"})," file"]}),"\n",(0,t.jsx)(n.li,{children:"Create a new release on GitHub with the same version number"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"framework-adapters",children:"Framework Adapters"}),"\n",(0,t.jsx)(n.p,{children:"The SDK is designed to support adapters for popular .NET logging frameworks. When implementing a new adapter:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a new project for the adapter (e.g., ",(0,t.jsx)(n.code,{children:"NeuralLog.SDK.Extensions.Logging"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Implement the adapter using the appropriate interfaces from the logging framework"}),"\n",(0,t.jsx)(n.li,{children:"Add unit tests for the adapter"}),"\n",(0,t.jsx)(n.li,{children:"Update the documentation to include the new adapter"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,t.jsxs)(n.p,{children:["The SDK documentation is maintained in the ",(0,t.jsx)(n.a,{href:"https://github.com/NeuralLog/docs",children:"NeuralLog/docs"})," repository. When making changes to the SDK, make sure to update the documentation as well:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Update the C# SDK documentation at ",(0,t.jsx)(n.code,{children:"docs/components/csharp-sdk.md"})]}),"\n",(0,t.jsx)(n.li,{children:"Update this development guide if necessary"}),"\n",(0,t.jsx)(n.li,{children:"Create or update any additional documentation pages as needed"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"continuous-integration",children:"Continuous Integration"}),"\n",(0,t.jsxs)(n.p,{children:["The SDK uses GitHub Actions for continuous integration. The CI workflow is defined in the ",(0,t.jsx)(n.code,{children:".github/workflows/ci.yml"})," file and runs on every push to the main branch and on pull requests."]}),"\n",(0,t.jsx)(n.p,{children:"The CI workflow:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Builds the SDK"}),"\n",(0,t.jsx)(n.li,{children:"Runs the tests"}),"\n",(0,t.jsx)(n.li,{children:"Reports the results"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Fork the repository"}),"\n",(0,t.jsx)(n.li,{children:"Create a feature branch"}),"\n",(0,t.jsx)(n.li,{children:"Make your changes"}),"\n",(0,t.jsx)(n.li,{children:"Add or update tests"}),"\n",(0,t.jsx)(n.li,{children:"Update documentation"}),"\n",(0,t.jsx)(n.li,{children:"Submit a pull request"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,t.jsx)(n.p,{children:"The SDK is licensed under the MIT License."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);