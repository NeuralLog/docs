"use strict";(self.webpackChunkneural_log_docs=self.webpackChunkneural_log_docs||[]).push([[1643],{5895:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"sdk/python","title":"Python SDK","description":"The NeuralLog Python SDK provides a client library for interacting with the NeuralLog server from Python applications. It offers a simple logging API and adapters for popular Python logging frameworks.","source":"@site/docs/sdk/python.md","sourceDirName":"sdk","slug":"/sdk/python","permalink":"/docs/docs/sdk/python","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralLog/docs/tree/main/docs/sdk/python.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"C# SDK","permalink":"/docs/docs/sdk/csharp"},"next":{"title":"Go SDK","permalink":"/docs/docs/sdk/go"}}');var l=o(4848),i=o(8453);const s={sidebar_position:5},a="Python SDK",t={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Framework Adapters",id:"framework-adapters",level:2},{value:"Standard Logging",id:"standard-logging",level:3},{value:"Loguru",id:"loguru",level:3},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Context Data",id:"context-data",level:3},{value:"Batching",id:"batching",level:3},{value:"Async Logging",id:"async-logging",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"NeuralLog",id:"neurallog",level:3},{value:"Static Methods",id:"static-methods",level:4},{value:"Logger",id:"logger",level:3},{value:"Methods",id:"methods",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Connection Errors",id:"connection-errors",level:4},{value:"Authentication Errors",id:"authentication-errors",level:4},{value:"Source Code",id:"source-code",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"python-sdk",children:"Python SDK"})}),"\n",(0,l.jsx)(n.p,{children:"The NeuralLog Python SDK provides a client library for interacting with the NeuralLog server from Python applications. It offers a simple logging API and adapters for popular Python logging frameworks."}),"\n",(0,l.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Python"}),": 3.8 or later"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"pip"}),": For package installation"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip install neurallog-sdk\n"})}),"\n",(0,l.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,l.jsx)(n.p,{children:"The Python SDK provides a simple API for logging messages to the NeuralLog server:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'from neurallog import NeuralLog, LogLevel\n\n# Configure the SDK (optional)\nNeuralLog.configure(\n    server_url="http://localhost:3030",\n    namespace="default"\n)\n\n# Get a logger\nlogger = NeuralLog.get_logger("my-application")\n\n# Log a simple message\nlogger.info("Hello, world!")\n\n# Log with structured data\nlogger.info("User logged in", {\n    "user": "john.doe",\n    "action": "login",\n    "ip": "192.168.1.1"\n})\n\n# Log an error with exception\ntry:\n    # Some code that might throw an exception\n    raise ValueError("Something went wrong")\nexcept Exception as e:\n    logger.error("Failed to process request", exception=e)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"framework-adapters",children:"Framework Adapters"}),"\n",(0,l.jsx)(n.p,{children:"The Python SDK provides adapters for popular Python logging frameworks, allowing you to integrate NeuralLog into existing applications with minimal changes."}),"\n",(0,l.jsx)(n.h3,{id:"standard-logging",children:"Standard Logging"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import logging\nfrom neurallog.adapters import NeuralLogHandler\n\n# Configure the standard logging\nlogger = logging.getLogger("my-application")\nlogger.setLevel(logging.INFO)\n\n# Add NeuralLog handler\nhandler = NeuralLogHandler(log_name="my-application")\nlogger.addHandler(handler)\n\n# Use the logger\nlogger.info("This will be sent to NeuralLog")\n\n# With extra data\nlogger.info("User logged in", extra={\n    "user": "john.doe",\n    "action": "login"\n})\n\n# With exception\ntry:\n    raise ValueError("Something went wrong")\nexcept Exception as e:\n    logger.exception("Failed to process request")\n'})}),"\n",(0,l.jsx)(n.h3,{id:"loguru",children:"Loguru"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'from loguru import logger\nfrom neurallog.adapters import NeuralLogSink\n\n# Configure Loguru\nlogger.configure(handlers=[\n    {"sink": NeuralLogSink(log_name="my-application")}\n])\n\n# Use the logger\nlogger.info("This will be sent to NeuralLog")\n\n# With structured data\nlogger.info("User {user} logged in from {ip}", user="john.doe", ip="192.168.1.1")\n\n# With exception\ntry:\n    raise ValueError("Something went wrong")\nexcept Exception as e:\n    logger.exception("Failed to process request")\n'})}),"\n",(0,l.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,l.jsxs)(n.p,{children:["The Python SDK can be configured using the ",(0,l.jsx)(n.code,{children:"configure"})," method:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'from neurallog import NeuralLog\n\nNeuralLog.configure(\n    server_url="https://logs.example.com",\n    namespace="production",\n    api_key="your-api-key",\n    batch_size=100,\n    batch_interval=5.0,\n    max_retries=3,\n    retry_backoff=1.0,\n    async_enabled=True,\n    debug_enabled=False\n)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,l.jsx)(n.h3,{id:"context-data",children:"Context Data"}),"\n",(0,l.jsx)(n.p,{children:"You can add context data that will be included with all log entries:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'# Set global context for all loggers\nNeuralLog.set_global_context({\n    "application": "my-app",\n    "environment": "production",\n    "version": "1.0.0"\n})\n\n# Set context for a specific logger\nlogger = NeuralLog.get_logger("my-component")\nlogger.set_context({\n    "component": "authentication"\n})\n'})}),"\n",(0,l.jsx)(n.h3,{id:"batching",children:"Batching"}),"\n",(0,l.jsx)(n.p,{children:"The SDK supports batching log entries for improved performance:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"NeuralLog.configure(\n    async_enabled=True,\n    batch_size=100,\n    batch_interval=5.0\n)\n"})}),"\n",(0,l.jsx)(n.p,{children:"When batching is enabled, log entries are queued and sent in batches. You can manually flush the queue:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"# Flush all loggers\nNeuralLog.flush_all()\n\n# Flush a specific logger\nlogger.flush()\n"})}),"\n",(0,l.jsx)(n.h3,{id:"async-logging",children:"Async Logging"}),"\n",(0,l.jsx)(n.p,{children:"The SDK supports asynchronous logging to avoid blocking your application:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"NeuralLog.configure(\n    async_enabled=True\n)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,l.jsx)(n.h3,{id:"neurallog",children:"NeuralLog"}),"\n",(0,l.jsx)(n.h4,{id:"static-methods",children:"Static Methods"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"configure(**kwargs)"})," - Configure global options"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"get_logger(name)"})," - Get a logger instance"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"set_global_context(context)"})," - Set context data for all loggers"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"flush_all()"})," - Flush all loggers"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"logger",children:"Logger"}),"\n",(0,l.jsx)(n.h4,{id:"methods",children:"Methods"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"debug(message, data=None, exception=None)"})," - Log a debug message"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"info(message, data=None, exception=None)"})," - Log an info message"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"warning(message, data=None, exception=None)"})," - Log a warning message"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"error(message, data=None, exception=None)"})," - Log an error message"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"fatal(message, data=None, exception=None)"})," - Log a fatal message"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"log(level, message, data=None, exception=None)"})," - Log a message at the specified level"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"set_context(context)"})," - Set context data for this logger"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"flush()"})," - Flush any pending log entries"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsx)(n.h4,{id:"connection-errors",children:"Connection Errors"}),"\n",(0,l.jsx)(n.p,{children:"If you're experiencing connection errors to the NeuralLog server:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"neurallog.exceptions.NeuralLogConnectionError: Failed to connect to server\n"})}),"\n",(0,l.jsx)(n.p,{children:"Check that:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The server URL is correct"}),"\n",(0,l.jsx)(n.li,{children:"The server is running and accessible"}),"\n",(0,l.jsx)(n.li,{children:"Your network allows the connection"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"authentication-errors",children:"Authentication Errors"}),"\n",(0,l.jsx)(n.p,{children:"If you're seeing authentication errors:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"neurallog.exceptions.NeuralLogAuthError: Invalid API key\n"})}),"\n",(0,l.jsx)(n.p,{children:"Verify that:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"You've set the correct API key"}),"\n",(0,l.jsx)(n.li,{children:"The API key has the necessary permissions"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"source-code",children:"Source Code"}),"\n",(0,l.jsxs)(n.p,{children:["The source code for the NeuralLog Python SDK is available on GitHub:\n",(0,l.jsx)(n.a,{href:"https://github.com/NeuralLog/python-sdk",children:"https://github.com/NeuralLog/python-sdk"})]})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var r=o(6540);const l={},i=r.createContext(l);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);