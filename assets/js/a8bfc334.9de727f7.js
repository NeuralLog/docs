"use strict";(self.webpackChunkneural_log_docs=self.webpackChunkneural_log_docs||[]).push([[1919],{8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var t=a(6540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},9143:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"development/java-22-compatibility","title":"Java 22 Compatibility","description":"This guide explains the changes made to ensure NeuralLog Java SDK compatibility with Java 22.","source":"@site/docs/development/java-22-compatibility.md","sourceDirName":"development","slug":"/development/java-22-compatibility","permalink":"/docs/docs/development/java-22-compatibility","draft":false,"unlisted":false,"editUrl":"https://github.com/NeuralLog/docs/tree/main/docs/development/java-22-compatibility.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Go SDK","permalink":"/docs/docs/sdk/go"},"next":{"title":"C# SDK Development","permalink":"/docs/docs/development/csharp-sdk-development"}}');var r=a(4848),i=a(8453);const s={},o="Java 22 Compatibility",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Dependency Updates",id:"dependency-updates",level:2},{value:"Code Changes",id:"code-changes",level:2},{value:"NeuralLogCommonsLogger",id:"neurallogcommonslogger",level:3},{value:"NeuralLogJulHandler",id:"neurallogjulhandler",level:3},{value:"NeuralLogSlf4jAppender",id:"neurallogslf4jappender",level:3},{value:"Maven Configuration",id:"maven-configuration",level:2},{value:"Testing",id:"testing",level:2},{value:"Documentation Updates",id:"documentation-updates",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"java-22-compatibility",children:"Java 22 Compatibility"})}),"\n",(0,r.jsx)(n.p,{children:"This guide explains the changes made to ensure NeuralLog Java SDK compatibility with Java 22."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The NeuralLog Java SDK has been updated to be fully compatible with Java 22. This includes:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Updating dependencies to versions that support Java 22"}),"\n",(0,r.jsx)(n.li,{children:"Fixing code that was incompatible with Java 22"}),"\n",(0,r.jsx)(n.li,{children:"Adding configuration for Java 22 experimental features"}),"\n",(0,r.jsx)(n.li,{children:"Updating documentation to reflect Java 22 support"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"dependency-updates",children:"Dependency Updates"}),"\n",(0,r.jsx)(n.p,{children:"The following dependencies were updated to support Java 22:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Dependency"}),(0,r.jsx)(n.th,{children:"Old Version"}),(0,r.jsx)(n.th,{children:"New Version"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Mockito Core"}),(0,r.jsx)(n.td,{children:"< 5.0.0"}),(0,r.jsx)(n.td,{children:"5.10.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Byte Buddy"}),(0,r.jsx)(n.td,{children:"< 1.14.0"}),(0,r.jsx)(n.td,{children:"1.14.12"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Byte Buddy Agent"}),(0,r.jsx)(n.td,{children:"< 1.14.0"}),(0,r.jsx)(n.td,{children:"1.14.12"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"These updates were necessary because older versions of these libraries were not compatible with Java 22's new features and changes."}),"\n",(0,r.jsx)(n.h2,{id:"code-changes",children:"Code Changes"}),"\n",(0,r.jsx)(n.h3,{id:"neurallogcommonslogger",children:"NeuralLogCommonsLogger"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"NeuralLogCommonsLogger"})," class was updated to use the overridable ",(0,r.jsx)(n.code,{children:"getLogger"})," method instead of directly calling ",(0,r.jsx)(n.code,{children:"NeuralLog.getLogger"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// Before\npublic NeuralLogCommonsLogger(String name) {\n    this.logger = NeuralLog.getLogger(name);\n}\n\n// After\npublic NeuralLogCommonsLogger(String name) {\n    this.logger = getLogger(name);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"This change allows for proper mocking in tests."}),"\n",(0,r.jsx)(n.h3,{id:"neurallogjulhandler",children:"NeuralLogJulHandler"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"NeuralLogJulHandler"})," class was updated to use ",(0,r.jsx)(n.code,{children:"MessageFormat"})," instead of ",(0,r.jsx)(n.code,{children:"String.format"})," for JUL parameter formatting:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// Before\nif (record.getParameters() != null && record.getParameters().length > 0) {\n    try {\n        message = String.format(message, record.getParameters());\n    } catch (Exception e) {\n        // Ignore formatting errors\n    }\n}\n\n// After\nif (record.getParameters() != null && record.getParameters().length > 0) {\n    try {\n        // Use MessageFormat instead of String.format for JUL parameter formatting\n        java.text.MessageFormat formatter = new java.text.MessageFormat(message);\n        message = formatter.format(record.getParameters());\n    } catch (Exception e) {\n        // Ignore formatting errors\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"This change ensures proper parameter formatting in Java 22."}),"\n",(0,r.jsx)(n.h3,{id:"neurallogslf4jappender",children:"NeuralLogSlf4jAppender"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"NeuralLogSlf4jAppender"})," class was updated to handle MDC adapter issues in Java 22:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// Before\n// Extract MDC data\nMap<String, Object> data = new HashMap<>();\nif (event.getMDCPropertyMap() != null && !event.getMDCPropertyMap().isEmpty()) {\n    data.putAll(event.getMDCPropertyMap());\n}\n\n// After\n// Extract MDC data\nMap<String, Object> data = new HashMap<>();\ntry {\n    Map<String, String> mdcMap = event.getMDCPropertyMap();\n    if (mdcMap != null && !mdcMap.isEmpty()) {\n        data.putAll(mdcMap);\n    }\n} catch (NullPointerException e) {\n    // Ignore MDC errors in tests\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"This change adds error handling for MDC adapter issues in Java 22."}),"\n",(0,r.jsx)(n.h2,{id:"maven-configuration",children:"Maven Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The Maven configuration was updated to support Java 22:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Updated Java version in POM file:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<maven.compiler.source>22</maven.compiler.source>\n<maven.compiler.target>22</maven.compiler.target>\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Added experimental Byte Buddy support for Java 22:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-surefire-plugin</artifactId>\n    <version>3.1.2</version>\n    <configuration>\n        <argLine>-Dnet.bytebuddy.experimental=true</argLine>\n    </configuration>\n</plugin>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.p,{children:"All tests have been updated to work with Java 22. The test suite now passes with Java 22, ensuring that the SDK is fully compatible with this version."}),"\n",(0,r.jsx)(n.h2,{id:"documentation-updates",children:"Documentation Updates"}),"\n",(0,r.jsx)(n.p,{children:"The documentation has been updated to reflect Java 22 compatibility:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Updated the README.md file to specify Java 22 as the minimum required version"}),"\n",(0,r.jsx)(n.li,{children:"Added a new section in the documentation about Java 22 compatibility"}),"\n",(0,r.jsx)(n.li,{children:"Updated the build instructions to include Java 22-specific steps"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"With these changes, the NeuralLog Java SDK is now fully compatible with Java 22. Users can now use the latest Java features while still benefiting from the NeuralLog logging system."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);